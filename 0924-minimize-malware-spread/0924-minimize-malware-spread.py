class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        
        
        
        '''
        intial = set(intial)
        mx = [-1,-1]
        for i in sorted(intial):
            score = 0
            for j in range(len(graph[i])):
                seen = set()
                if i != j and graph[i][j] == 1:
                    score,virus = dfs(i)
                    if not virus
                    
        '''
        #seen = set(initial)
        mp = defaultdict(set)
        def bfs():
            #if skip in seen:
            #    seen.remove(skip)
            
            
            q = deque()
            for i in range(len(initial)):
                q.append((initial[i], initial[i]))
                mp[initial[i]].add(initial[i])
            
            while q:

                for i in range(len(q)):

                    node,st = q.popleft()
                    
                    
                    for j in range(len(graph[node])):

                        if graph[node][j] == 0 or j == node or st in mp[j]:
                            continue

                        mp[j].add(st)
                        q.append((j, st))

            
    
        
        start = bfs()
        #print(mp)
        best = defaultdict(int)
        b = [-1,-1]
        for key,val in mp.items():
            if len(val) == 1:
                for v in val:
                    best[v] += 1
                    if best[v] > b[0]:
                        b = [best[v], v]
                    elif best[v] == b[0] and v < b[1]:
                        b = [best[v], v]


        #print(best)
        return b[1] if b[1] != -1 else min(initial)
                
            
        '''
    
        for i in sorted(initial):
            seen = set(initial)
            score = start - bfs(i)
            
            if score > best[0]:
                best = [score, i]
                
        
        return best[1]
        '''
            
            
            